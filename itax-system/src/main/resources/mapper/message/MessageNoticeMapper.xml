<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuqian.itax.message.dao.MessageNoticeMapper">
	<resultMap type="com.yuqian.itax.message.entity.MessageNoticeEntity" id="baseEntityMap">
		<id column="id" property="id"/>
		<result column="notice_id" property="noticeId"/>
		<result column="oem_code" property="oemCode"/>
		<result column="notice_type" property="noticeType"/>
		<result column="notice_position" property="noticePosition"/>
		<result column="open_mode" property="openMode"/>
		<result column="business_type" property="businessType"/>
		<result column="notice_title" property="noticeTitle"/>
		<result column="notice_subtitle" property="noticeSubtitle"/>
		<result column="notice_content" property="noticeContent"/>
		<result column="jump_url" property="jumpUrl"/>
		<result column="user_phones" property="userPhones"/>
		<result column="status" property="status"/>
		<result column="source_id" property="sourceId"/>
		<result column="order_no" property="orderNo"/>
		<result column="user_id" property="userId"/>
		<result column="user_type" property="userType"/>
		<result column="is_alert" property="isAlert"/>
		<result column="add_time" property="addTime"/>
		<result column="add_user" property="addUser"/>
		<result column="update_time" property="updateTime"/>
		<result column="update_user" property="updateUser"/>
		<result column="remark" property="remark"/>
	</resultMap>

	<sql id="Base_Columns">
		id, notice_id, oem_code, notice_type, notice_position, open_mode, business_type, notice_title, notice_content,notice_subtitle, jump_url, user_phones, status,
		source_id, order_no, user_id, user_type, is_alert,add_time, add_user, update_time, update_user, remark
    </sql>

	<update id="updateNoticeById" parameterType="com.yuqian.itax.message.entity.MessageNoticeEntity">
		update t_e_message_notice
		<set>
			<if test="noticeContent != null and noticeContent!= ''">
				notice_content = #{noticeContent},
			</if>
			<if test="isAlert != null and isAlert!= ''">
				is_alert = #{isAlert},
			</if>
			<if test="status != null and status!= ''">
				status = #{status},
			</if>
				update_time = NOW(),
			<if test="updateUser != null and updateUser!= ''">
				update_user = #{updateUser},
			</if>
		</set>
		<where>
			id = #{id} and user_id = #{userId} and user_type = #{userType} and status = 0
		</where>
	</update>

	<!--查询未读消息数量 add by Kaven 2020-03-04 -->
	<select id="getUnReadCount" resultType="integer">
		select count(1) from t_e_message_notice where status = 0 and oem_code = #{oemCode} and user_id = #{userId}
	</select>

	<!--查询超过days天的未读消息列表 add by Kaven 2020-03-10 -->
	<select id="selectUnReadList" parameterType="java.lang.Integer" resultMap="baseEntityMap">
		select
			<include refid="Base_Columns"/>
		from
			t_e_message_notice t
		<where>
			t.status = 0 and date_add(t.add_time, interval #{days} day) &lt; now() and t.is_alert=0
		</where>
	</select>

	<!--查询全部消息列表（未读和已读） add by Kaven 2020-03-04 -->
	<select id="selectList" parameterType="com.yuqian.itax.message.entity.query.MessageNoticeQuery" resultMap="baseEntityMap">
		select
			<include refid="Base_Columns"/>
		from
			t_e_message_notice
		<where>
			oem_code = #{oemCode} and user_id = #{userId}
			<if test="status == 0">
				and status = 0
			</if>
			<if test="status == 1">
				and status in (0,1)
			</if>
		</where>
		 order by add_time desc
	</select>

	<!-- 根据用户id和机构编码将用户未读消息全部设置为已读 add by Kaven 2020-03-04 -->
	<update id="updateNoticeAllRead">
		update t_e_message_notice
		set
			status = 1 ,
			update_time = #{updateTime} ,
			update_user = #{updateUser}
		<where>
			status = 0 and user_id = #{userId} and oem_code = #{oemCode}
		</where>
	</update>

    <!-- 根据用户id和机构编码获取全部首页未弹窗的消息 add ni.jiang-->
    <select id="findAllHomeNotAlertMessageByUserId" parameterType="com.yuqian.itax.message.entity.query.MessageNoticeQuery" resultMap="baseEntityMap">
        select
        <include refid="Base_Columns"/>
        from
        t_e_message_notice
        <where>
             oem_code = #{oemCode}
            and user_id = #{userId}
            and notice_type = 2
            and status = 0
            and user_type = 1
			and (is_alert = 0 or is_alert is null)
            and notice_position like '%2'
        </where>
        order by add_time desc
    </select>

	<select id="findAllHomeNotAlertMessageByUserIdAndBusinessType" parameterType="com.yuqian.itax.message.entity.query.MessageNoticeQuery" resultMap="baseEntityMap">
		select
		<include refid="Base_Columns"/>
		from
		t_e_message_notice
		<where>
			oem_code = #{oemCode}
			and user_id = #{userId}
			and notice_type = 2
			and status = 0
			and user_type = 1
			and (is_alert = 0 or is_alert is null)
			and notice_position like '%2'
			and business_type =  #{businessType}
		</where>
		order by add_time desc
	</select>


	<insert id="addBatch">
		insert into t_e_message_notice
		(id, notice_id, oem_code, notice_type, notice_position, open_mode,
		business_type, notice_title, notice_content,notice_subtitle, jump_url, user_phones, status,
		source_id, order_no, user_id, user_type,is_alert,add_time,add_user,update_time,update_user,remark)
		values
		<foreach collection ="list" item="item" index= "index" separator =",">
		(
		#{item.id},
		#{item.noticeId},
		#{item.oemCode},
		#{item.noticeType},
		#{item.noticePosition},
		#{item.openMode},
		#{item.businessType},
		#{item.noticeTitle},
		#{item.noticeContent},
		#{item.noticeSubtitle},
		#{item.jumpUrl},
		#{item.userPhones},
		#{item.status},
		#{item.sourceId},
		#{item.orderNo},
		#{item.userId},
		#{item.userType},
		#{item.isAlert},
		#{item.addTime},
		#{item.addUser},
		#{item.updateTime},
		#{item.updateUser},
		#{item.remark}
		)
		</foreach>
	</insert>

	<update id="updateStatusByNoticeId">
		update t_e_message_notice
		set status=#{status}
		where
		notice_id=#{noticeId}
	</update>

	<select id="queryNoticeByType" resultMap="baseEntityMap">
		SELECT
			<include refid="Base_Columns"/>
		FROM
			`t_e_message_notice` mo
		WHERE
			mo.`user_id` = #{userId}
		AND
			mo.`oem_code` = #{oemCode}
		AND
			mo.`business_type` = #{businessType}
		AND
			mo.`status` = 0
	</select>

	<update id="updateStatusById">
		update t_e_message_notice
		set status= #{status}
		where
		id = #{id}
	</update>
</mapper>